{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/natewb/Desktop/dev/node-js/covid-server/frontend/components/Page.jsx\";\nimport { ScrapeProvider } from \"./ScrapeContext\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction useScrapes() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrapes = _useState2[0],\n      setScrapes = _useState2[1];\n\n  useEffect(function _callee() {\n    var res, data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Mounting or Updating\");\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:2093/data\"));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 6:\n            data = _context.sent;\n            console.log(data);\n            setScrapes(data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return scrapes;\n}\n\nexport default function Page(_ref) {\n  var children = _ref.children;\n  var scrapes = useScrapes();\n  return React.createElement(ScrapeProvider, {\n    value: {\n      scrapes: scrapes\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, children));\n}","map":{"version":3,"sources":["/home/natewb/Desktop/dev/node-js/covid-server/frontend/components/Page.jsx"],"names":["ScrapeProvider","React","useEffect","useState","useScrapes","scrapes","setScrapes","console","log","fetch","res","json","data","Page","children"],"mappings":";;;AAAA,SAASA,cAAT;;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,UAAT,GAAsB;AAAA,kBACUD,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,MACbE,OADa;AAAA,MACJC,UADI;;AAGpBJ,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACRK,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AADQ;AAAA,6CAEUC,KAAK,CAAC,4BAAD,CAFf;;AAAA;AAEFC,YAAAA,GAFE;AAAA;AAAA,6CAGWA,GAAG,CAACC,IAAJ,EAHX;;AAAA;AAGFC,YAAAA,IAHE;AAIRL,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAN,YAAAA,UAAU,CAACM,IAAD,CAAV;;AALQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAMN,EANM,CAAT;AAQA,SAAOP,OAAP;AACD;;AAED,eAAe,SAASQ,IAAT,OAA4B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACzC,MAAMT,OAAO,GAAGD,UAAU,EAA1B;AACA,SACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOS,QAAP,CADF,CADF;AAKD","sourcesContent":["import { ScrapeProvider } from \"./ScrapeContext\";\nimport { Text } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction useScrapes() {\n  const [scrapes, setScrapes] = useState({});\n\n  useEffect(async () => {\n    console.log(\"Mounting or Updating\");\n    const res = await fetch(\"http://localhost:2093/data\");\n    const data = await res.json();\n    console.log(data);\n    setScrapes(data);\n  }, []);\n\n  return scrapes;\n}\n\nexport default function Page({ children }) {\n  const scrapes = useScrapes();\n  return (\n    <ScrapeProvider value={{ scrapes }}>\n      <Text>{children}</Text>\n    </ScrapeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}